# https://python-poetry.org/docs/pyproject/
# https://www.python.org/dev/peps/pep-0621/
[tool.poetry]
name = "{{ cookiecutter.project_name }}"
version = "{{ cookiecutter.version }}"
description = ""
authors = []
license = "{{ cookiecutter.sdpx_license_identifier }}"
readme = "README.md"
packages = [
    {include = "*", from = "src"},
]

[tool.poetry.scripts]
"{{ cookiecutter.cli_name }}" = "{{ cookiecutter.python_package_fqname }}.cli:main"


[tool.poetry.dependencies]
python = "^{{ cookiecutter.python_version }}"
pydantic = ">=1"
PyYAML = ">=6"
structlog = ">=21"
typer = ">=0"

[tool.poetry.dev-dependencies]
black = ">=22"
codespell = ">=2"
flake8 = ">=4"
flake8-black = ">=0"
flake8-bugbear = ">=22"
flake8-isort = ">=4"
isort = ">=5"
mypy = ">=0"
pep8-naming = ">=0"
pycln = ">=1"
pytest = ">=7"
pytest-cov = ">=3"
safety = ">=1"
types-click = ">=7"
types-PyYAML = ">=6"
typing-extensions = ">=4"

[tool.coverage.report]
# https://coverage.readthedocs.io/en/coverage-5.0/config.html
show_missing = true

[tool.isort]
# https://pycqa.github.io/isort/docs/configuration/config_files.html
profile = "black"
src_paths = ["src", "tests"]

[tool.pytest.ini_options]
addopts = ["--cov-config=pyproject.toml", "--cov=src"]
# https://docs.pytest.org/en/stable/customize.html
# https://docs.pytest.org/en/stable/reference.html#configuration-options
log_cli = true
log_cli_level = "DEBUG"
log_cli_format = "%(asctime)s %(process)d %(thread)d %(levelno)03d:%(levelname)-8s %(name)-12s %(module)s:%(lineno)s:%(funcName)s %(message)s"
log_cli_date_format = "%Y-%m-%dT%H:%M:%S"

[tool.mypy]
# https://mypy.readthedocs.io/en/stable/config_file.html
files = "src,tests"
mypy_path = "src"
python_version = "{{ cookiecutter.python_version }}"
strict = true
warn_unreachable = true
warn_unused_configs = true
explicit_package_bases = true
namespace_packages = true

[build-system]
requires = ["setuptools","poetry-core>=1.0.0","poetry-dynamic-versioning"]
build-backend = "poetry.core.masonry.api"
