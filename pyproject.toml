[tool.poetry]
name = "aucampia.cookiecutter-python"
version = "0.0.0"
description = ""
license = "CC0-1.0"
readme = "README.md"
authors = []
packages = [
    {include = "hooks"},
]

[tool.poetry.dependencies]
python = "^3.9"
PyYAML = "^6.0.2"

[tool.poetry.group.dev.dependencies]
black = "^25.1.0"
codespell = "^2.4.1"
mypy = "^1.15.0"
pytest = "^8.3.5"
pytest-cov = "^6.1.1"
pytest-asyncio = "^0.26.0"
types-PyYAML = "^6.0.12.20250402"
pip-audit = "^2.9.0"
ruff = "^0.11.7"
typing-extensions = "^4.13.2"

pytest-cookies = "^0.7.0"
poetry = "^2.1.2"
cookiecutter = "^2.6.0"
frozendict = "^2.4.6"
types-frozendict = "^2.0.9"
chardet = "^5.2.0"

[tool.poetry.group.templates.dependencies]
typer = "^0.15.2"
structlog = "^25.2.0"
pydantic = "^2.11.3"
poethepoet = "^0.34.0"

[tool.ruff]
# Same as Black.
line-length = 88
indent-width = 4

target-version = "py39"

exclude = [
    "examples/**",
]

[tool.ruff.lint]
# https://beta.ruff.rs/docs/configuration/
preview = true
select = [
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "F", # Pyflakes
    "I", # isort
    "N", # pep8-naming
    "RUF", # Ruff
    "UP", # pyupgrade
    "FA", # flake8-future-annotations
]

ignore = [
    "E501", # line too long:
    # Disabled based on black recommendations
    # https://black.readthedocs.io/en/stable/faq.html#why-are-flake8-s-e203-and-w503-violated
    "E203", # whitespace before ':'
    "E231", # missing whitespace after ','
    "E251", # Unexpected spaces around keyword / parameter equals
    # Disabled because this targets Python 3.9 or later
    "UP007", # Use `X | Y` for type annotations
    "UP045", # Use `X | None` for type annotations
]

[tool.ruff.lint.per-file-ignores]

[tool.ruff.format]

[tool.coverage.report]
# https://coverage.readthedocs.io/en/coverage-5.0/config.html
show_missing = true

[tool.pytest.ini_options]
# https://docs.pytest.org/en/stable/customize.html
# https://docs.pytest.org/en/stable/reference.html#configuration-options
testpaths=[
    "tests"
]
addopts = [
    "--cov-config=pyproject.toml",
    "--capture=no",
    "--tb=native",
    "-ra",
]
log_format = "%(asctime)s %(process)d %(thread)d %(levelno)03d:%(levelname)-8s %(name)-12s %(module)s:%(lineno)s:%(funcName)s %(message)s"
log_date_format = "%Y-%m-%dT%H:%M:%S"
log_cli_format = "%(asctime)s %(process)d %(thread)d %(levelno)03d:%(levelname)-8s %(name)-12s %(module)s:%(lineno)s:%(funcName)s %(message)s"
log_cli_date_format = "%Y-%m-%dT%H:%M:%S"
asyncio_mode = "auto"

[tool.mypy]
# https://mypy.readthedocs.io/en/stable/config_file.html
files = "hooks,tests,link_project/pkg_files"
python_version = "3.10"
strict = true
warn_unreachable = true
warn_unused_configs = true
explicit_package_bases = true
namespace_packages = true
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "pytest_cookies.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "cookiecutter.*"
ignore_missing_imports = true

[tool.pycln]
# https://hadialqattan.github.io/pycln/#/?id=cli-options
# https://hadialqattan.github.io/pycln/#/?id=example
paths = ["hooks", "tests", "link_project/pkg_files"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

